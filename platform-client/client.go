package platform

type Client interface {

	// Ping does ping pong with the API server at /
	Ping() bool
	// AccountBalance returns a summary of the account's balance and available balance
	AccountBalance() (AccountSummary, error)
	// InitiateWithdrawal initiates a withdrawal from River Platform API by paying a specific invoice
	InitiateWithdrawal(amount int, invoice, currency, network string, fee_limit int) (Withdrawal, error)
	// GetWithdrawal returns a withdrawal based on the passed withdrawal_id
	GetWithdrawal(withdrawal_id string) (Withdrawal, error)
	// CreateDepositInvoice creates an invoice to enable deposits to River Platform
	CreateDepositInvoice(amount int, label, network string) (DepositInvoice, error)
	// GetDepositInvoices queries a list of invoices generated by River Platform
	GetDepositInvoices(limit, next_timestamp int) ([]DepositInvoice, error)
	// GetDeposits returns a list of deposits (settled invoices) to River Platform
	GetDeposits(limit, next_timestamp int) (DepositList, error)
	// SubscribeToWebhook subscribes to a webhook
	SubscribeToWebhook(callback_url string) (Webhook, error)
	// GetSubscribedWebhook queries subscribed webhook
	GetSubscribedWebhook() (Webhook, error)
	// DeleteWebhook deletes the existing webhook
	DeleteWebhook() bool
	// DecodeInvoice decodes a Lightning Invoice using River Platform using `lncli decodepayreq`
	DecodeInvoice(invoice string) (DecodedInvoice, error)
	// EstimateLightningFee estimates Lightning Fee of an invoice using `lncli`
	EstimateLightningFee(invoice string, amount int) (FeeEstimate, error)
}
